AWSTemplateFormatVersion: 2010-09-09
Description: Datadog AWS Streams
Parameters:
  ApiKey:
    Description: >-
      Your Datadog API Key
    Type: String
    AllowedPattern: .+
    ConstraintDescription: ApiKey is required
  ServiceRoleArn:
    Description: >-
      The arn for the service role used by kinesis firehose
    Type: String
    AllowedPattern: .+
    ConstraintDescription: ServiceRoleArn is required
  StreamRoleArn:
    Description: >-
      The arn for the stream used by the cloudwatch stream
    Type: String
    AllowedPattern: .+
    ConstraintDescription: StreamRoleArn is required
  FilterMethod:
    Description: >-
      "Include" for an inclusion filter or "Exclude" for an exclusion filter for the following namespaces.
    Type: String
    Default: 'Include'
  FirstNamespace:
    Description: >-
      A namespace to use for filtering. Leave blank if you do not need to filter by namespace.
    Type: String
    Default: ''
  SecondNamespace:
    Description: >-
      A namespace to use for filtering. Leave blank if you do not need to filter by namespace.
    Type: String
    Default: ''
  ThirdNamespace:
    Description: >-
      A namespace to use for filtering. Leave blank if you do not need to filter by namespace.
      If you need additional namespaces follow this link for additional templates.
    Type: String
    Default: ''
  DdSite:
    Description: >-
      Define your Datadog Site to send data to. For the Datadog EU site, set to datadoghq.eu
    Type: String
    AllowedPattern: .+
    Default: 'datadoghq.com'
    ConstraintDescription: DdSite is required
Conditions:
  HasIncludeNamespace1: !And [ !Not [ !Equals [ !Ref FirstNamespace, '' ] ], !Equals [ !Ref FilterMethod, 'Include' ]]
  HasIncludeNamespace2: !And [ !Not [ !Equals [ !Ref SecondNamespace, '' ] ], !Equals [ !Ref FilterMethod, 'Include' ]]
  HasIncludeNamespace3: !And [ !Not [ !Equals [ !Ref ThirdNamespace, '' ] ], !Equals [ !Ref FilterMethod, 'Include' ]]
  HasExcludeNamespace1: !And [ !Not [ !Equals [ !Ref FirstNamespace, '' ] ], !Not [ !Equals [ !Ref FilterMethod, 'Include' ]]]
  HasExcludeNamespace2: !And [ !Not [ !Equals [ !Ref SecondNamespace, '' ] ], !Not [ !Equals [ !Ref FilterMethod, 'Include' ]]]
  HasExcludeNamespace3: !And [ !Not [ !Equals [ !Ref ThirdNamespace, '' ] ], !Not [ !Equals [ !Ref FilterMethod, 'Include' ]]]
  EUDatacenter: !Equals [ !Ref DdSite, 'datadoghq.eu' ]
  US5Datacenter: !Equals [ !Ref DdSite, 'us5.datadoghq.com' ]
  Staging: !Equals [ !Ref DdSite, 'datad0g.com' ]
Resources:
  DatadogStreamLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: "datadog-metric-stream"
      RetentionInDays: 14
  HTTPLogStream:
    Type: AWS::Logs::LogStream
    Properties:
      LogGroupName: !Ref DatadogStreamLogs
      LogStreamName: "http_endpoint_delivery"
  S3Backup:
    Type: AWS::Logs::LogStream
    Properties:
      LogGroupName: !Ref DatadogStreamLogs
      LogStreamName: "s3_backup"
  DatadogStreamBackupBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "datadog-aws-metric-stream-backup-${AWS::AccountId}-${AWS::Region}"
  DatadogMetricKinesisFirehose:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      DeliveryStreamName: "datadog-metrics-stream"
      DeliveryStreamType: "DirectPut"
      HttpEndpointDestinationConfiguration:
        BufferingHints:
          SizeInMBs: 4
          IntervalInSeconds: 60
        EndpointConfiguration:
          Url:
            !If
            - Staging
            - "https://awsmetrics-http-intake.datad0g.com/v1/input"
            - !If
              - EUDatacenter
              - "https://awsmetrics-intake.datadoghq.eu/v1/input"
              - !If
                - US5Datacenter
                - !Sub "https://event-platform-intake.us5.datadoghq.com/api/v2/awsmetrics?dd-protocol=aws-kinesis-firehose&dd-api-key=${ApiKey}"
                - "https://awsmetrics-intake.datadoghq.com/v1/input"
          Name: "Event intake"
          AccessKey: !Ref ApiKey
        CloudWatchLoggingOptions:
          Enabled: True
          LogGroupName: !Ref DatadogStreamLogs
          LogStreamName: "http_endpoint_delivery"
        RoleARN: !Ref ServiceRoleArn
        RetryOptions:
          DurationInSeconds: 60
        S3BackupMode: "FailedDataOnly"
        S3Configuration:
          RoleARN: !Ref ServiceRoleArn
          BucketARN: !GetAtt DatadogStreamBackupBucket.Arn
          ErrorOutputPrefix: "datadog_stream"
          BufferingHints:
            SizeInMBs: 4
            IntervalInSeconds: 60
          CompressionFormat: "GZIP"
          CloudWatchLoggingOptions:
            Enabled: True
            LogGroupName: !Ref DatadogStreamLogs
            LogStreamName: "s3_backup"
      Tags:
        - Key: "Team"
          Value: "aws-integration"
        - Key: "StreamAccountID"
          Value: !Ref "AWS::AccountId"
  DatadogMetricStreamAllNamespaces:
    Type: AWS::CloudWatch::MetricStream
    Properties:
      Name: "datadog-metrics-stream"
      FirehoseArn: !GetAtt DatadogMetricKinesisFirehose.Arn
      RoleArn: !Ref StreamRoleArn
      OutputFormat: "opentelemetry0.7"
      IncludeFilters:
        - !If
          - HasIncludeNamespace1
          - Namespace:
              !Ref FirstNamespace
          - !Ref 'AWS::NoValue'
        - !If
          - HasIncludeNamespace2
          - Namespace:
              !Ref SecondNamespace
          - !Ref 'AWS::NoValue'
        - !If
          - HasIncludeNamespace3
          - Namespace:
              !Ref ThirdNamespace
          - !Ref 'AWS::NoValue'
      ExcludeFilters:
        - !If
          - HasExcludeNamespace1
          - Namespace:
              !Ref FirstNamespace
          - !Ref 'AWS::NoValue'
        - !If
          - HasExcludeNamespace2
          - Namespace:
              !Ref SecondNamespace
          - !Ref 'AWS::NoValue'
        - !If
          - HasExcludeNamespace3
          - Namespace:
              !Ref ThirdNamespace
          - Ref: 'AWS::NoValue'
