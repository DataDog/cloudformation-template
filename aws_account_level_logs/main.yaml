AWSTemplateFormatVersion: "2010-09-09"
Description: Account level logs subscription
Parameters:
  ApiKey:
    Description: >-
      Your Datadog API Key
    Type: String
    AllowedPattern: .+
    ConstraintDescription: ApiKey is required
    NoEcho: true
  DatadogHttpEndpointUrl:
    Type: String
    Default: 'https://aws-kinesis-http-intake.logs.datadoghq.com/v1/input'
    AllowedValues:
      - 'https://aws-kinesis-http-intake.logs.datadoghq.com/v1/input'
      - 'https://aws-kinesis-http-intake.logs.datadoghq.eu/v1/input'
      - 'https://aws-kinesis-http-intake.logs.ap1.datadoghq.com/api/v2/logs?dd-protocol=aws-kinesis-firehose'
      - 'https://aws-kinesis-http-intake.logs.us3.datadoghq.com/api/v2/logs?dd-protocol=aws-kinesis-firehose'
      - 'https://aws-kinesis-http-intake.logs.us5.datadoghq.com/api/v2/logs?dd-protocol=aws-kinesis-firehose'
      - 'https://aws-kinesis-http-intake.logs.ddog-gov.com/v1/input'
      - 'https://aws-kinesis-http-intake.logs.datad0g.com/v1/input'
    Description: The URL of the Datadog HTTP endpoint to send logs to.
  Regions:
    Description: >-
      Comma separated list of regions to enable account level logs
    Type: CommaDelimitedList
    ConstraintDescription: Regions is required
    Default: ''
Resources:
  DatadogAccountLevelLogsStackSetAdministrationRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "DatadogAccountLevelLogsStackSetAdministrationRole"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "cloudformation.amazonaws.com"
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: DatadogAcconuntLevelLogsCfnStackSetAssumeRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - cloudformation:*
                Resource: "*"
  DatadogAccountLevelLogsStackSetExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "DatadogAccountLevelLogsStackSetExecutionRole"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: !GetAtt DatadogAccountLevelLogsStackSetAdministrationRole.Arn
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: DatadogAccountLevelLogsCfnStackAssumeRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - "s3:*"
                Resource:
                  - "arn:aws:s3:::cf-templates-*"
              - Effect: Allow
                Action:
                  - "cloudformation:*"
                Resource:
                  - !Sub "arn:aws:cloudformation:*:${AWS::AccountId}:stack/StackSet-DatadogAccountLevelLogs-*"
                  - !Sub "arn:aws:cloudformation:*:${AWS::AccountId}:stackset/DatadogAccountLevelLogs*"
              - Effect: Allow
                Action:
                  - "sns:Publish"
                Resource:
                  - "arn:aws:sns:*:*:CfnNotificationSNSTopic"
              - Effect: Allow
                Action:
                  - iam:GetRole
                  - iam:PassRole
                  - iam:CreateRole
                  - iam:DeleteRole
                  - iam:AttachRolePolicy
                  - iam:DetachRolePolicy
                  - iam:DeleteRolePolicy
                  - iam:PutRolePolicy
                  - iam:GetRolePolicy
                Resource: "*"
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:DeleteLogGroup
                  - logs:PutRetentionPolicy
                  - logs:CreateLogStream
                  - logs:DeleteLogStream
                  - logs:DescribeLogStreams
                  - logs:TagResource
                  - logs:DescribeAccountPolicies
                  - logs:PutAccountPolicy
                  - logs:DeleteAccountPolicy
                  - logs:PutSubscriptionFilter
                  - logs:DeleteSubscriptionFilter
                  - logs:DescribeSubscriptionFilters
                Resource:
                  - !Sub "arn:aws:logs:*:${AWS::AccountId}:*"
              - Effect: Allow
                Action:
                  - firehose:CreateDeliveryStream
                  - firehose:DescribeDeliveryStream
                  - firehose:DeleteDeliveryStream
                  - firehose:TagDeliveryStream
                Resource:
                  - !Sub "arn:aws:firehose:*:${AWS::AccountId}:deliverystream/StackSet-DatadogAccountLevelLogs-*"
  LogsBackupBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "datadog-account-level-logs-stream-backup-${AWS::AccountId}"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: "aws:kms"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
       Rules:
       - Id: delete-incomplete-mpu-7days
         Prefix: ''
         AbortIncompleteMultipartUpload:
           DaysAfterInitiation: 7
         Status: Enabled

  LogsBackupBucketAssumeRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - firehose.amazonaws.com
      Policies:
        - PolicyName: ForwarderRolePolicy0
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                  - s3:AbortMultipartUpload
                  - s3:GetBucketLocation
                  - s3:GetObject
                  - s3:ListBucket
                  - s3:ListBucketMultipartUploads
                  - s3:PutObject
                Effect: Allow
                Resource:
                  - Fn::GetAtt: "LogsBackupBucket.Arn"
                  - Fn::Join:
                      - "/"
                      - - Fn::GetAtt: "LogsBackupBucket.Arn"
                        - "*"
  CloudWatchLogsRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service:
                'Fn::Join':
                  - ''
                  - - logs.
                    - amazonaws.com
            Action: 'sts:AssumeRole'

  CloudWatchLogsPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
        PolicyName: !Sub "cloudwatch-firehose-policy-${AWS::StackName}"
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'firehose:PutRecord'
                - 'firehose:PutRecordBatch'
                - 'kinesis:PutRecord'
                - 'kinesis:PutRecordBatch'
              Resource: !Sub "arn:aws:firehose:*:${AWS::AccountId}:*"
            - Effect: Allow
              Action:
                - 'iam:PassRole'
              Resource:
                - 'Fn::Join':
                    - ''
                    - - 'arn:aws:iam::'
                      - Ref: 'AWS::AccountId'
                      - ':role/'
                      - Ref: CloudWatchLogsRole
        Roles:
          - Ref: CloudWatchLogsRole

  FirehoseLogsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: firehose.amazonaws.com
          Action: sts:AssumeRole
  FirehoseLogsPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: 'datadog-firehose-delivery-policy'
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - 's3:AbortMultipartUpload'
              - 's3:GetBucketLocation'
              - 's3:GetObject'
              - 's3:ListBucket'
              - 's3:ListBucketMultipartUploads'
              - 's3:PutObject'
            Resource:
              - !GetAtt LogsBackupBucket.Arn
          - Effect: Allow
            Action:
              - 'logs:PutLogEvents'
            Resource:
              - !Sub "arn:aws:logs:*:${AWS::AccountId}:log-group:StackSet-DatadogAccountLevelLogs*"
          - Effect: Allow
            Action:
              - 'kinesis:DescribeStream'
              - 'kinesis:GetShardIterator'
              - 'kinesis:GetRecords'
            Resource:
              - !Sub "arn:aws:firehose:*:${AWS::AccountId}:deliverystream/StackSet-DatadogAccountLevelLogs*"
      Roles:
        - Ref: FirehoseLogsRole

  DatadogAccountLevelLogsStackSet:
    Type: AWS::CloudFormation::StackSet
    Properties:
      StackSetName: DatadogAccountLevelLogs
      Capabilities:
        - CAPABILITY_IAM
      PermissionModel: SELF_MANAGED
      ManagedExecution:
        Active: true
      AdministrationRoleARN: !GetAtt DatadogAccountLevelLogsStackSetAdministrationRole.Arn
      ExecutionRoleName: !Ref DatadogAccountLevelLogsStackSetExecutionRole
      StackInstancesGroup:
        - DeploymentTargets:
            Accounts:
              - !Ref "AWS::AccountId"
          Regions: !Ref Regions
      TemplateURL: "https://s3.amazonaws.com/<BUCKET_PLACEHOLDER>/aws_account_level_logs/single-region.yaml"
      Parameters:
        - ParameterKey: ApiKey
          ParameterValue: !Ref ApiKey
        - ParameterKey: BackupBucketArn
          ParameterValue: !GetAtt LogsBackupBucket.Arn
        - ParameterKey: DatadogHttpEndpointUrl
          ParameterValue: !Ref DatadogHttpEndpointUrl
        - ParameterKey: CloudwatchLogsRoleArn
          ParameterValue: !GetAtt CloudWatchLogsRole.Arn
        - ParameterKey: FirehoseLogsRoleArn
          ParameterValue: !GetAtt FirehoseLogsRole.Arn
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Required
      Parameters:
        - ApiKey
        - Regions
