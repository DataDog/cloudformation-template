AWSTemplateFormatVersion: 2010-09-09
Description: IAM role for Datadog AWS Integration
Parameters:
  ExternalId:
    Description: >-
      External ID for the Datadog role (generate at
      https://app.datadoghq.com/account/settings#integrations/amazon-web-services)
    Type: String
  IAMRoleName:
    Description: Customize the name of IAM role for Datadog AWS integration
    Type: String
    Default: DatadogIntegrationRole
  ResourceCollectionPermissions:
    Type: String
    Default: false
    AllowedValues:
      - true
      - false
    Description: >-
      Set this value to "true" to add permissions for Datadog to collect resource configuration data.
  DdAWSAccountId:
    Description: >-
      Datadog AWS account ID allowed to assume the integration IAM role. DO NOT CHANGE!
    Type: String
    Default: "464622532012"
Conditions:
  ShouldInstallSecurityAuditPolicy:
    Fn::Equals:
      - Ref: ResourceCollectionPermissions
      - true
Resources:
  DatadogIntegrationRole:
    Type: "AWS::IAM::Role"
    Metadata:
      cfn-lint:
        config:
          # cfn-lint does not yet support "Fn::Transform"
          # This policy needs broad read permissions to allow Datadog to collect metrics and metadata
          ignore_checks:
            - E3002
            - E3003
            - EIAMPolicyActionWildcard
            - EIAMPolicyWildcardResource
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:${AWS::Partition}:iam::${DdAWSAccountId}:root"
            Action:
              - "sts:AssumeRole"
            Condition:
              StringEquals:
                "sts:ExternalId": !Ref ExternalId
      Path: /
      RoleName: !Ref IAMRoleName
      ManagedPolicyArns:
        !If [
          ShouldInstallSecurityAuditPolicy,
          [!Sub "arn:${AWS::Partition}:iam::aws:policy/SecurityAudit"],
          !Ref AWS::NoValue,
        ]
      Policies:
        - PolicyName: DatadogAWSIntegrationPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource: "*"
                Action:
                  - "account:GetAccountInformation"
                  - "airflow:GetEnvironment"
                  - "airflow:ListEnvironments"
                  - "apigateway:GET"
                  - "autoscaling:Describe*"
                  - "backup:List*"
                  - "bcm-data-exports:GetExport"
                  - "bcm-data-exports:ListExports"
                  - "budgets:ViewBudget"
                  - "cloudfront:GetDistributionConfig"
                  - "cloudfront:ListDistributions"
                  - "cloudtrail:DescribeTrails"
                  - "cloudtrail:GetTrail"
                  - "cloudtrail:GetTrailStatus"
                  - "cloudtrail:ListTrails"
                  - "cloudtrail:LookupEvents"
                  - "cloudwatch:Describe*"
                  - "cloudwatch:Get*"
                  - "cloudwatch:List*"
                  - "codedeploy:BatchGet*"
                  - "codedeploy:List*"
                  - "cur:DescribeReportDefinitions"
                  - "directconnect:Describe*"
                  - "dynamodb:Describe*"
                  - "dynamodb:List*"
                  - "ec2:Describe*"
                  - "ecs:Describe*"
                  - "ecs:List*"
                  - "elasticache:Describe*"
                  - "elasticache:List*"
                  - "elasticfilesystem:DescribeAccessPoints"
                  - "elasticfilesystem:DescribeFileSystems"
                  - "elasticfilesystem:DescribeTags"
                  - "elasticloadbalancing:Describe*"
                  - "elasticmapreduce:Describe*"
                  - "elasticmapreduce:List*"
                  - "es:DescribeElasticsearchDomains"
                  - "es:ListDomainNames"
                  - "es:ListTags"
                  - "events:CreateEventBus"
                  - "fsx:DescribeFileSystems"
                  - "fsx:ListTagsForResource"
                  - "health:DescribeAffectedEntities"
                  - "health:DescribeEventDetails"
                  - "health:DescribeEvents"
                  - "iam:ListAccountAliases"
                  - "kinesis:Describe*"
                  - "kinesis:List*"
                  - "lambda:List*"
                  - "logs:DeleteSubscriptionFilter"
                  - "logs:DescribeLogGroups"
                  - "logs:DescribeLogStreams"
                  - "logs:DescribeSubscriptionFilters"
                  - "logs:FilterLogEvents"
                  - "logs:PutSubscriptionFilter"
                  - "logs:TestMetricFilter"
                  - "oam:ListAttachedLinks"
                  - "oam:ListSinks"
                  - "organizations:Describe*"
                  - "organizations:List*"
                  - "rds:Describe*"
                  - "rds:List*"
                  - "redshift:DescribeClusters"
                  - "redshift:DescribeLoggingStatus"
                  - "route53:List*"
                  - "s3:GetBucketLocation"
                  - "s3:GetBucketLogging"
                  - "s3:GetBucketNotification"
                  - "s3:GetBucketTagging"
                  - "s3:ListAllMyBuckets"
                  - "s3:PutBucketNotification"
                  - "ses:Get*"
                  - "ses:List*"
                  - "sns:GetSubscriptionAttributes"
                  - "sns:List*"
                  - "sns:Publish"
                  - "sqs:ListQueues"
                  - "ssm:GetServiceSetting"
                  - "ssm:ListCommands"
                  - "states:DescribeStateMachine"
                  - "states:ListStateMachines"
                  - "support:DescribeTrustedAdvisor*"
                  - "support:RefreshTrustedAdvisorCheck"
                  - "tag:GetResources"
                  - "tag:GetTagKeys"
                  - "tag:GetTagValues"
                  - "timestream:DescribeEndpoints"
                  - "wafv2:ListLoggingConfigurations"
                  - "xray:BatchGetTraces"
                  - "xray:GetTraceSummaries"
  DatadogIntegrationRoleManagedPolicy1:
    Type: "AWS::IAM::ManagedPolicy"
    Condition: ShouldInstallSecurityAuditPolicy
    Properties:
      ManagedPolicyName: !Sub
        - "${IAMRoleName}-ManagedPolicy-1"
        - { IAMRoleName: !Ref IAMRoleName }
      Roles:
        - !Ref DatadogIntegrationRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Resource: "*"
            Action:
              - "account:GetContactInformation"
              - "amplify:ListApps"
              - "amplify:ListArtifacts"
              - "amplify:ListBackendEnvironments"
              - "amplify:ListBranches"
              - "amplify:ListDomainAssociations"
              - "amplify:ListJobs"
              - "amplify:ListWebhooks"
              - "aoss:BatchGetCollection"
              - "aoss:ListCollections"
              - "app-integrations:GetApplication"
              - "app-integrations:GetDataIntegration"
              - "app-integrations:ListApplicationAssociations"
              - "app-integrations:ListApplications"
              - "app-integrations:ListDataIntegrationAssociations"
              - "app-integrations:ListDataIntegrations"
              - "app-integrations:ListEventIntegrationAssociations"
              - "app-integrations:ListEventIntegrations"
              - "appstream:DescribeAppBlockBuilders"
              - "appstream:DescribeAppBlocks"
              - "appstream:DescribeApplications"
              - "appstream:DescribeFleets"
              - "appstream:DescribeImageBuilders"
              - "appstream:DescribeImages"
              - "appstream:DescribeStacks"
              - "appsync:GetGraphqlApi"
              - "aps:DescribeRuleGroupsNamespace"
              - "aps:DescribeScraper"
              - "aps:DescribeWorkspace"
              - "aps:ListRuleGroupsNamespaces"
              - "aps:ListScrapers"
              - "aps:ListWorkspaces"
              - "athena:BatchGetNamedQuery"
              - "athena:BatchGetPreparedStatement"
              - "b2bi:GetCapability"
              - "b2bi:GetPartnership"
              - "b2bi:GetProfile"
              - "b2bi:GetTransformer"
              - "b2bi:ListCapabilities"
              - "b2bi:ListPartnerships"
              - "b2bi:ListProfiles"
              - "b2bi:ListTransformers"
              - "backup-gateway:GetGateway"
              - "backup-gateway:GetHypervisor"
              - "backup-gateway:GetVirtualMachine"
              - "backup-gateway:ListGateways"
              - "backup-gateway:ListHypervisors"
              - "backup-gateway:ListVirtualMachines"
              - "backup:DescribeFramework"
              - "backup:GetLegalHold"
              - "backup:ListBackupPlans"
              - "backup:ListFrameworks"
              - "backup:ListLegalHolds"
              - "backup:ListProtectedResources"
              - "backup:ListRecoveryPointsByBackupVault"
              - "batch:DescribeJobQueues"
              - "batch:DescribeSchedulingPolicies"
              - "batch:ListSchedulingPolicies"
              - "bedrock:GetAgent"
              - "bedrock:GetAgentActionGroup"
              - "bedrock:GetAgentAlias"
              - "bedrock:GetAsyncInvoke"
              - "bedrock:GetBlueprint"
              - "bedrock:GetDataSource"
              - "bedrock:GetEvaluationJob"
              - "bedrock:GetFlow"
              - "bedrock:GetFlowAlias"
              - "bedrock:GetFlowVersion"
              - "bedrock:GetFoundationModel"
              - "bedrock:GetGuardrail"
              - "bedrock:GetImportedModel"
              - "bedrock:GetInferenceProfile"
              - "bedrock:GetIngestionJob"
              - "bedrock:GetKnowledgeBase"
              - "bedrock:GetMarketplaceModelEndpoint"
              - "bedrock:GetModelCopyJob"
              - "bedrock:GetModelCustomizationJob"
              - "bedrock:GetModelInvocationJob"
              - "bedrock:GetPrompt"
              - "bedrock:ListAgentActionGroups"
              - "bedrock:ListAgentAliases"
              - "bedrock:ListAgentCollaborators"
              - "bedrock:ListAgentVersions"
              - "bedrock:ListAgents"
              - "bedrock:ListAsyncInvokes"
              - "bedrock:ListBlueprints"
              - "bedrock:ListDataSources"
              - "bedrock:ListEvaluationJobs"
              - "bedrock:ListFlowAliases"
              - "bedrock:ListFlows"
              - "bedrock:ListFoundationModels"
              - "bedrock:ListGuardrails"
              - "bedrock:ListImportedModels"
              - "bedrock:ListInferenceProfiles"
              - "bedrock:ListIngestionJobs"
              - "bedrock:ListKnowledgeBaseDocuments"
              - "bedrock:ListKnowledgeBases"
              - "bedrock:ListMarketplaceModelEndpoints"
              - "bedrock:ListModelCopyJobs"
              - "bedrock:ListModelCustomizationJobs"
              - "bedrock:ListModelInvocationJobs"
              - "bedrock:ListPromptRouters"
              - "bedrock:ListPrompts"
              - "bedrock:ListProvisionedModelThroughputs"
              - "cassandra:Select"
              - "ce:DescribeCostCategoryDefinition"
              - "ce:GetAnomalyMonitors"
              - "ce:GetAnomalySubscriptions"
              - "ce:GetCostCategories"
              - "cloudformation:DescribeGeneratedTemplate"
              - "cloudformation:DescribeResourceScan"
              - "cloudformation:ListGeneratedTemplates"
              - "cloudformation:ListResourceScans"
              - "cloudformation:ListTypes"
              - "cloudhsm:DescribeBackups"
              - "cloudhsm:DescribeClusters"
              - "codeartifact:DescribeDomain"
              - "codeartifact:DescribePackageGroup"
              - "codeartifact:DescribeRepository"
              - "codeartifact:ListDomains"
              - "codeartifact:ListPackageGroups"
              - "codeartifact:ListPackages"
              - "codepipeline:GetActionType"
              - "codepipeline:ListActionTypes"
              - "codepipeline:ListWebhooks"
              - "connect:DescribeAgentStatus"
              - "connect:DescribeAuthenticationProfile"
              - "connect:DescribeContactFlow"
              - "connect:DescribeContactFlowModule"
              - "connect:DescribeHoursOfOperation"
              - "connect:DescribeInstance"
              - "connect:DescribeQueue"
              - "connect:DescribeQuickConnect"
              - "connect:DescribeRoutingProfile"
              - "connect:DescribeSecurityProfile"
              - "connect:DescribeUser"
              - "connect:ListAgentStatuses"
              - "connect:ListAuthenticationProfiles"
              - "connect:ListContactFlowModules"
              - "connect:ListContactFlows"
              - "connect:ListHoursOfOperations"
              - "connect:ListQueues"
              - "connect:ListQuickConnects"
              - "connect:ListRoutingProfiles"
              - "connect:ListSecurityProfiles"
              - "connect:ListUsers"
              - "controltower:GetLandingZone"
              - "controltower:ListEnabledBaselines"
              - "controltower:ListEnabledControls"
              - "controltower:ListLandingZones"
              - "databrew:ListDatasets"
              - "databrew:ListRecipes"
              - "databrew:ListRulesets"
              - "databrew:ListSchedules"
              - "datazone:GetDomain"
              - "datazone:ListDomains"
              - "deadline:GetBudget"
              - "deadline:GetLicenseEndpoint"
              - "deadline:GetQueue"
              - "deadline:ListBudgets"
              - "deadline:ListFarms"
              - "deadline:ListFleets"
              - "deadline:ListLicenseEndpoints"
              - "deadline:ListMonitors"
              - "deadline:ListQueues"
              - "deadline:ListWorkers"
              - "dlm:GetLifecyclePolicies"
              - "dlm:GetLifecyclePolicy"
              - "docdb-elastic:GetCluster"
              - "docdb-elastic:GetClusterSnapshot"
              - "docdb-elastic:ListClusterSnapshots"
              - "drs:DescribeJobs"
              - "drs:DescribeLaunchConfigurationTemplates"
              - "drs:DescribeRecoveryInstances"
              - "drs:DescribeReplicationConfigurationTemplates"
              - "drs:DescribeSourceNetworks"
              - "drs:DescribeSourceServers"
              - "dsql:GetCluster"
              - "dsql:ListClusters"
              - "dynamodb:DescribeBackup"
              - "dynamodb:DescribeStream"
              - "ec2:GetAllowedImagesSettings"
              - "ec2:GetEbsDefaultKmsKeyId"
              - "ec2:GetInstanceMetadataDefaults"
              - "ec2:GetSerialConsoleAccessStatus"
              - "ec2:GetSnapshotBlockPublicAccessState"
              - "ec2:GetVerifiedAccessEndpointPolicy"
              - "ec2:GetVerifiedAccessEndpointTargets"
              - "ec2:GetVerifiedAccessGroupPolicy"
              - "eks:DescribeAccessEntry"
              - "eks:DescribeAddon"
  DatadogIntegrationRoleManagedPolicy2:
    Type: "AWS::IAM::ManagedPolicy"
    Condition: ShouldInstallSecurityAuditPolicy
    Properties:
      ManagedPolicyName: !Sub
        - "${IAMRoleName}-ManagedPolicy-2"
        - { IAMRoleName: !Ref IAMRoleName }
      Roles:
        - !Ref DatadogIntegrationRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Resource: "*"
            Action:
              - "eks:DescribeIdentityProviderConfig"
              - "eks:DescribeInsight"
              - "eks:DescribePodIdentityAssociation"
              - "eks:DescribeUpdate"
              - "eks:ListAccessEntries"
              - "eks:ListAddons"
              - "eks:ListAssociatedAccessPolicies"
              - "eks:ListEksAnywhereSubscriptions"
              - "eks:ListIdentityProviderConfigs"
              - "eks:ListInsights"
              - "eks:ListPodIdentityAssociations"
              - "elasticmapreduce:ListInstanceFleets"
              - "elasticmapreduce:ListInstanceGroups"
              - "emr-containers:ListManagedEndpoints"
              - "emr-containers:ListSecurityConfigurations"
              - "emr-containers:ListVirtualClusters"
              - "geo:DescribeGeofenceCollection"
              - "geo:DescribeKey"
              - "geo:DescribeMap"
              - "geo:DescribePlaceIndex"
              - "geo:DescribeRouteCalculator"
              - "geo:DescribeTracker"
              - "geo:ListGeofenceCollections"
              - "geo:ListKeys"
              - "geo:ListPlaceIndexes"
              - "geo:ListRouteCalculators"
              - "geo:ListTrackers"
              - "glacier:GetVaultNotifications"
              - "glue:ListRegistries"
              - "grafana:DescribeWorkspace"
              - "greengrass:GetComponent"
              - "greengrass:GetConnectivityInfo"
              - "greengrass:GetCoreDevice"
              - "greengrass:GetDeployment"
              - "imagebuilder:GetContainerRecipe"
              - "imagebuilder:GetDistributionConfiguration"
              - "imagebuilder:GetImageRecipe"
              - "imagebuilder:GetInfrastructureConfiguration"
              - "imagebuilder:GetLifecyclePolicy"
              - "imagebuilder:GetWorkflow"
              - "imagebuilder:ListComponents"
              - "imagebuilder:ListContainerRecipes"
              - "imagebuilder:ListDistributionConfigurations"
              - "imagebuilder:ListImagePipelines"
              - "imagebuilder:ListImageRecipes"
              - "imagebuilder:ListImages"
              - "imagebuilder:ListInfrastructureConfigurations"
              - "imagebuilder:ListLifecyclePolicies"
              - "imagebuilder:ListWorkflows"
              - "iotsitewise:DescribeAsset"
              - "iotsitewise:DescribeAssetModel"
              - "iotsitewise:DescribeDashboard"
              - "iotsitewise:DescribeDataset"
              - "iotsitewise:DescribePortal"
              - "iotsitewise:DescribeProject"
              - "iotsitewise:ListAssets"
              - "iotsitewise:ListDashboards"
              - "iotsitewise:ListDatasets"
              - "iotsitewise:ListPortals"
              - "iotsitewise:ListProjects"
              - "iotsitewise:ListTimeSeries"
              - "iottwinmaker:GetComponentType"
              - "iottwinmaker:GetEntity"
              - "iottwinmaker:GetScene"
              - "iottwinmaker:GetWorkspace"
              - "iottwinmaker:ListComponentTypes"
              - "iottwinmaker:ListEntities"
              - "iottwinmaker:ListScenes"
              - "iotwireless:GetDeviceProfile"
              - "iotwireless:GetMulticastGroup"
              - "iotwireless:GetNetworkAnalyzerConfiguration"
              - "iotwireless:GetServiceProfile"
              - "iotwireless:GetWirelessDevice"
              - "iotwireless:GetWirelessGateway"
              - "iotwireless:ListDestinations"
              - "iotwireless:ListDeviceProfiles"
              - "iotwireless:ListMulticastGroups"
              - "iotwireless:ListNetworkAnalyzerConfigurations"
              - "iotwireless:ListServiceProfiles"
              - "iotwireless:ListWirelessDevices"
              - "iotwireless:ListWirelessGateways"
              - "ivs:GetChannel"
              - "ivs:GetComposition"
              - "ivs:GetEncoderConfiguration"
              - "ivs:GetIngestConfiguration"
              - "ivs:GetPublicKey"
              - "ivs:GetRecordingConfiguration"
              - "ivs:GetStage"
              - "ivs:ListChannels"
              - "ivs:ListCompositions"
              - "ivs:ListEncoderConfigurations"
              - "ivs:ListIngestConfigurations"
              - "ivs:ListPlaybackKeyPairs"
              - "ivs:ListPlaybackRestrictionPolicies"
              - "ivs:ListPublicKeys"
              - "ivs:ListRecordingConfigurations"
              - "ivs:ListStages"
              - "ivs:ListStorageConfigurations"
              - "ivs:ListStreamKeys"
              - "ivschat:GetLoggingConfiguration"
              - "ivschat:GetRoom"
              - "ivschat:ListLoggingConfigurations"
              - "ivschat:ListRooms"
              - "lambda:GetFunction"
              - "launchwizard:GetDeployment"
              - "launchwizard:ListDeployments"
              - "lightsail:GetAlarms"
              - "lightsail:GetCertificates"
              - "lightsail:GetDistributions"
              - "lightsail:GetInstancePortStates"
              - "lightsail:GetRelationalDatabaseParameters"
              - "lightsail:GetRelationalDatabaseSnapshots"
              - "lightsail:GetRelationalDatabases"
              - "lightsail:GetStaticIps"
              - "macie2:GetAllowList"
              - "macie2:GetCustomDataIdentifier"
              - "macie2:GetMacieSession"
              - "macie2:ListAllowLists"
              - "macie2:ListCustomDataIdentifiers"
              - "macie2:ListMembers"
              - "managedblockchain:GetAccessor"
              - "managedblockchain:GetMember"
              - "managedblockchain:GetNetwork"
              - "managedblockchain:GetNode"
              - "managedblockchain:GetProposal"
              - "managedblockchain:ListAccessors"
              - "managedblockchain:ListInvitations"
              - "managedblockchain:ListMembers"
              - "managedblockchain:ListNodes"
              - "managedblockchain:ListProposals"
              - "medialive:ListChannelPlacementGroups"
              - "medialive:ListCloudWatchAlarmTemplateGroups"
              - "medialive:ListCloudWatchAlarmTemplates"
              - "medialive:ListClusters"
              - "medialive:ListEventBridgeRuleTemplateGroups"
              - "medialive:ListEventBridgeRuleTemplates"
              - "medialive:ListInputDevices"
              - "medialive:ListInputSecurityGroups"
              - "medialive:ListInputs"
              - "medialive:ListMultiplexes"
              - "medialive:ListNetworks"
              - "medialive:ListNodes"
              - "medialive:ListOfferings"
              - "medialive:ListReservations"
              - "medialive:ListSdiSources"
              - "medialive:ListSignalMaps"
              - "mediapackage-vod:DescribeAsset"
              - "mediapackage-vod:ListAssets"
              - "mediapackage-vod:ListPackagingConfigurations"
              - "mediapackage:ListChannels"
              - "mediapackage:ListHarvestJobs"
              - "mediapackagev2:GetChannel"
              - "mediapackagev2:GetChannelGroup"
              - "mediapackagev2:GetChannelPolicy"
              - "mediapackagev2:GetOriginEndpoint"
              - "mediapackagev2:GetOriginEndpointPolicy"
              - "mediapackagev2:ListChannelGroups"
              - "mediapackagev2:ListChannels"
              - "mediapackagev2:ListHarvestJobs"
              - "mediapackagev2:ListOriginEndpoints"
              - "memorydb:DescribeAcls"
              - "memorydb:DescribeMultiRegionClusters"
              - "memorydb:DescribeParameterGroups"
              - "memorydb:DescribeReservedNodes"
              - "memorydb:DescribeSnapshots"
              - "memorydb:DescribeSubnetGroups"
              - "memorydb:DescribeUsers"
              - "mobiletargeting:GetApps"
              - "mobiletargeting:GetCampaigns"
              - "mobiletargeting:GetChannels"
              - "mobiletargeting:GetEventStream"
              - "mobiletargeting:GetSegments"
              - "mobiletargeting:ListJourneys"
              - "mobiletargeting:ListTemplates"
              - "network-firewall:DescribeTLSInspectionConfiguration"
              - "network-firewall:DescribeVpcEndpointAssociation"
              - "network-firewall:ListTLSInspectionConfigurations"
              - "network-firewall:ListVpcEndpointAssociations"
              - "networkmanager:GetConnectPeer"
  DatadogIntegrationRoleManagedPolicy3:
    Type: "AWS::IAM::ManagedPolicy"
    Condition: ShouldInstallSecurityAuditPolicy
    Properties:
      ManagedPolicyName: !Sub
        - "${IAMRoleName}-ManagedPolicy-3"
        - { IAMRoleName: !Ref IAMRoleName }
      Roles:
        - !Ref DatadogIntegrationRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Resource: "*"
            Action:
              - "networkmanager:GetConnections"
              - "networkmanager:GetCoreNetwork"
              - "networkmanager:GetDevices"
              - "networkmanager:GetLinks"
              - "networkmanager:GetSites"
              - "networkmanager:ListAttachments"
              - "networkmanager:ListConnectPeers"
              - "networkmanager:ListCoreNetworks"
              - "networkmanager:ListPeerings"
              - "osis:GetPipeline"
              - "osis:GetPipelineBlueprint"
              - "osis:ListPipelineBlueprints"
              - "osis:ListPipelines"
              - "payment-cryptography:GetKey"
              - "payment-cryptography:ListAliases"
              - "payment-cryptography:ListKeys"
              - "pca-connector-ad:ListConnectors"
              - "pca-connector-ad:ListDirectoryRegistrations"
              - "pca-connector-ad:ListTemplates"
              - "pca-connector-scep:ListConnectors"
              - "personalize:DescribeAlgorithm"
              - "personalize:DescribeBatchInferenceJob"
              - "personalize:DescribeBatchSegmentJob"
              - "personalize:DescribeCampaign"
              - "personalize:DescribeDataDeletionJob"
              - "personalize:DescribeDataset"
              - "personalize:DescribeDatasetExportJob"
              - "personalize:DescribeDatasetImportJob"
              - "personalize:DescribeEventTracker"
              - "personalize:DescribeFeatureTransformation"
              - "personalize:DescribeFilter"
              - "personalize:DescribeMetricAttribution"
              - "personalize:DescribeRecipe"
              - "personalize:DescribeRecommender"
              - "personalize:DescribeSchema"
              - "personalize:DescribeSolution"
              - "personalize:ListBatchInferenceJobs"
              - "personalize:ListBatchSegmentJobs"
              - "personalize:ListCampaigns"
              - "personalize:ListDataDeletionJobs"
              - "personalize:ListDatasetExportJobs"
              - "personalize:ListDatasetImportJobs"
              - "personalize:ListDatasets"
              - "personalize:ListEventTrackers"
              - "personalize:ListFilters"
              - "personalize:ListMetricAttributions"
              - "personalize:ListRecipes"
              - "personalize:ListRecommenders"
              - "personalize:ListSchemas"
              - "personalize:ListSolutions"
              - "pipes:ListPipes"
              - "proton:GetComponent"
              - "proton:GetDeployment"
              - "proton:GetEnvironment"
              - "proton:GetEnvironmentAccountConnection"
              - "proton:GetEnvironmentTemplate"
              - "proton:GetEnvironmentTemplateVersion"
              - "proton:GetRepository"
              - "proton:GetService"
              - "proton:GetServiceInstance"
              - "proton:GetServiceTemplate"
              - "proton:GetServiceTemplateVersion"
              - "proton:ListComponents"
              - "proton:ListDeployments"
              - "proton:ListEnvironmentAccountConnections"
              - "proton:ListEnvironmentTemplateVersions"
              - "proton:ListEnvironmentTemplates"
              - "proton:ListEnvironments"
              - "proton:ListRepositories"
              - "proton:ListServiceInstances"
              - "proton:ListServiceTemplateVersions"
              - "proton:ListServiceTemplates"
              - "proton:ListServices"
              - "qbusiness:GetApplication"
              - "qbusiness:GetDataAccessor"
              - "qbusiness:GetDataSource"
              - "qbusiness:GetIndex"
              - "qbusiness:GetPlugin"
              - "qbusiness:GetRetriever"
              - "qbusiness:GetWebExperience"
              - "qbusiness:ListDataAccessors"
              - "qldb:ListJournalKinesisStreamsForLedger"
              - "ram:GetResourceShareInvitations"
              - "rbin:GetRule"
              - "rbin:ListRules"
              - "redshift-serverless:ListEndpointAccess"
              - "redshift-serverless:ListManagedWorkgroups"
              - "redshift-serverless:ListNamespaces"
              - "redshift-serverless:ListRecoveryPoints"
              - "redshift-serverless:ListSnapshots"
              - "resiliencehub:DescribeApp"
              - "resiliencehub:DescribeAppAssessment"
              - "resiliencehub:ListAppAssessments"
              - "resiliencehub:ListApps"
              - "resiliencehub:ListResiliencyPolicies"
              - "resource-explorer-2:GetIndex"
              - "resource-explorer-2:GetManagedView"
              - "resource-explorer-2:GetView"
              - "resource-explorer-2:ListManagedViews"
              - "resource-explorer-2:ListViews"
              - "resource-groups:GetGroup"
              - "resource-groups:ListGroups"
              - "route53-recovery-readiness:ListCells"
              - "route53-recovery-readiness:ListReadinessChecks"
              - "route53-recovery-readiness:ListRecoveryGroups"
              - "route53-recovery-readiness:ListResourceSets"
              - "rum:GetAppMonitor"
              - "rum:ListAppMonitors"
              - "s3-outposts:ListRegionalBuckets"
              - "savingsplans:DescribeSavingsPlanRates"
              - "savingsplans:DescribeSavingsPlans"
              - "scheduler:GetSchedule"
              - "scheduler:ListScheduleGroups"
              - "scheduler:ListSchedules"
              - "securitylake:ListDataLakes"
              - "securitylake:ListSubscribers"
              - "servicecatalog:DescribePortfolio"
              - "servicecatalog:DescribeProduct"
              - "servicecatalog:GetApplication"
              - "servicecatalog:GetAttributeGroup"
              - "servicecatalog:ListApplications"
              - "servicecatalog:ListAttributeGroups"
              - "servicecatalog:ListPortfolios"
              - "servicecatalog:SearchProducts"
              - "servicediscovery:GetNamespace"
              - "servicediscovery:GetService"
              - "servicediscovery:ListNamespaces"
              - "servicediscovery:ListServices"
              - "ses:GetArchive"
              - "ses:GetContactList"
              - "ses:GetCustomVerificationEmailTemplate"
              - "ses:GetDedicatedIpPool"
              - "ses:GetIdentityMailFromDomainAttributes"
              - "ses:GetIngressPoint"
              - "ses:GetMultiRegionEndpoint"
              - "ses:GetRelay"
              - "ses:GetRuleSet"
              - "ses:GetTemplate"
              - "ses:GetTrafficPolicy"
              - "ses:ListAddonInstances"
              - "ses:ListAddonSubscriptions"
              - "ses:ListAddressLists"
              - "ses:ListArchives"
              - "ses:ListContactLists"
              - "ses:ListCustomVerificationEmailTemplates"
              - "ses:ListIngressPoints"
              - "ses:ListMultiRegionEndpoints"
              - "ses:ListRelays"
              - "ses:ListRuleSets"
              - "ses:ListTemplates"
              - "ses:ListTrafficPolicies"
              - "signer:GetSigningProfile"
              - "signer:ListSigningProfiles"
              - "sms-voice:DescribeConfigurationSets"
              - "sms-voice:DescribeOptOutLists"
              - "sms-voice:DescribePhoneNumbers"
              - "sms-voice:DescribePools"
              - "sms-voice:DescribeProtectConfigurations"
              - "sms-voice:DescribeRegistrationAttachments"
              - "sms-voice:DescribeRegistrations"
              - "sms-voice:DescribeSenderIds"
              - "sms-voice:DescribeVerifiedDestinationNumbers"
              - "snowball:DescribeCluster"
              - "snowball:DescribeJob"
              - "sns:ListEndpointsByPlatformApplication"
              - "sns:ListPlatformApplications"
              - "social-messaging:GetLinkedWhatsAppBusinessAccount"
              - "social-messaging:ListLinkedWhatsAppBusinessAccounts"
              - "sqs:GetQueueUrl"
              - "ssm-incidents:GetIncidentRecord"
              - "ssm-incidents:GetReplicationSet"
              - "ssm-incidents:GetResponsePlan"
              - "ssm-incidents:ListIncidentRecords"
              - "ssm-incidents:ListReplicationSets"
              - "ssm-incidents:ListResponsePlans"
              - "ssm:GetMaintenanceWindow"
              - "ssm:GetOpsItem"
  DatadogIntegrationRoleManagedPolicy4:
    Type: "AWS::IAM::ManagedPolicy"
    Condition: ShouldInstallSecurityAuditPolicy
    Properties:
      ManagedPolicyName: !Sub
        - "${IAMRoleName}-ManagedPolicy-4"
        - { IAMRoleName: !Ref IAMRoleName }
      Roles:
        - !Ref DatadogIntegrationRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Resource: "*"
            Action:
              - "ssm:GetPatchBaseline"
              - "states:ListActivities"
              - "states:ListExecutions"
              - "states:ListMapRuns"
              - "states:ListStateMachineAliases"
              - "storagegateway:DescribeFileSystemAssociations"
              - "storagegateway:DescribeSMBFileShares"
              - "timestream:ListScheduledQueries"
              - "timestream:ListTables"
              - "transcribe:GetCallAnalyticsJob"
              - "transcribe:GetMedicalScribeJob"
              - "transcribe:GetMedicalTranscriptionJob"
              - "transcribe:GetTranscriptionJob"
              - "transcribe:ListMedicalScribeJobs"
              - "translate:GetParallelData"
              - "translate:GetTerminology"
              - "verifiedpermissions:GetPolicyStore"
              - "verifiedpermissions:ListIdentitySources"
              - "verifiedpermissions:ListPolicies"
              - "verifiedpermissions:ListPolicyStores"
              - "verifiedpermissions:ListPolicyTemplates"
              - "vpc-lattice:GetListener"
              - "vpc-lattice:GetResourceConfiguration"
              - "vpc-lattice:GetResourceGateway"
              - "vpc-lattice:GetRule"
              - "vpc-lattice:GetService"
              - "vpc-lattice:GetServiceNetwork"
              - "vpc-lattice:GetTargetGroup"
              - "vpc-lattice:ListAccessLogSubscriptions"
              - "vpc-lattice:ListListeners"
              - "vpc-lattice:ListResourceConfigurations"
              - "vpc-lattice:ListResourceEndpointAssociations"
              - "vpc-lattice:ListResourceGateways"
              - "vpc-lattice:ListRules"
              - "vpc-lattice:ListServiceNetworkResourceAssociations"
              - "vpc-lattice:ListServiceNetworkServiceAssociations"
              - "vpc-lattice:ListServiceNetworkVpcAssociations"
              - "vpc-lattice:ListServiceNetworks"
              - "vpc-lattice:ListServices"
              - "vpc-lattice:ListTargetGroups"
              - "waf-regional:GetRule"
              - "waf-regional:GetRuleGroup"
              - "waf-regional:ListRuleGroups"
              - "waf-regional:ListRules"
              - "waf:GetRule"
              - "waf:GetRuleGroup"
              - "waf:ListRuleGroups"
              - "waf:ListRules"
              - "wafv2:GetIPSet"
              - "wafv2:GetRegexPatternSet"
              - "wafv2:GetRuleGroup"
              - "workmail:DescribeOrganization"
              - "workmail:ListOrganizations"
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Required
        Parameters:
          - ExternalId
          - IAMRoleName
      - Label:
          default: Optional
        Parameters:
          - CloudSecurityPostureManagementPermissions
          - DdAWSAccountId
